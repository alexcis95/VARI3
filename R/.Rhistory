quiero = filter(epipvalue, epipvalue$SNP1 %in% epirep$SNP & epipvalue$SNP2 %in% epirep$BEST_SNP)
quiero = mutate(quiero, deseo = paste(SNP1,SNP2))
episet = mutate(episet, deseo = paste(SNP,BEST_SNP))
qf = filter(quiero, quiero$deseo %in% episet$deseo)
qf = qf[c(2,6)]
names(qf) = c("SNP", "Pepi")
m5 = inner_join(final3, qf, by ="SNP")
epiinform = m5[c(1,2,16,17,3:15)]
write.table(epiinform, file = paste0("",out,"/epiinform.txt"),
sep = " ", row.names = F, col.names = T, quote = F)
tx  = readLines(paste0("",out,"//epiinform.txt"))
tx  = gsub(pattern = "[[:space:]]", replace = " ", x = tx)
write.table(tx, file = paste0("",out,"/epiinform.txt"),
sep = " ", row.names = F, col.names = F, quote = F)
}else{
final = m2[c(10,6,17,16,22,11,12,13,15,18,19,20,21,9)]
names(final) = c("SNP", "CHISQ", "SNP2", "GEN1", "GEN2",
"F_A1", "ORl1", "Pl1", "LOC1",
"F_A2", "Pl2", "ORl2", "LOC2", "TBf")
final2 = as.matrix(final)
final3 = as.data.frame(final2)
# To keep p.value
episuc100 = read_delim(paste0("",out,"/episelecrjoint.epi.cc.summary"),
delim = " ", col_types = "ncnnnnnc")
names(episuc100) = c("CHR", "SNP", "N_SIG", "N_TOT", "PROP", "BEST_CHISQ", "BEST_CHR", "BEST_SNP")
episet = episuc100
epirep = episet[c(2,8)]
epipvalue = read_delim(paste0("",out,"/episelecrjoint.epi.cc"),
delim = " ", col_types = "ncncnn")
names(epipvalue) = c("CHR1", "SNP1", "CHR2", "SNP2", "STAT", "P")
quiero = filter(epipvalue, epipvalue$SNP1 %in% epirep$SNP & epipvalue$SNP2 %in% epirep$BEST_SNP)
quiero = mutate(quiero, deseo = paste(SNP1,SNP2))
episet = mutate(episet, deseo = paste(SNP,BEST_SNP))
qf = filter(quiero, quiero$deseo %in% episet$deseo)
qf = qf[c(2,6)]
names(qf) = c("SNP", "Pepi")
m5 = inner_join(final3, qf, by ="SNP")
epiinform = m5[c(1,2,14,15,3:13)]
write.table(epiinform, file = paste0("",out,"/epiinform.txt"),
sep = " ", row.names = F, col.names = T, quote = F)
tx  = readLines(paste0("",out,"//epiinform.txt"))
tx  = gsub(pattern = "[[:space:]]", replace = " ", x = tx)
write.table(tx, file = paste0("",out,"/epiinform.txt"),
sep = " ", row.names = F, col.names = F, quote = F)
}
}else{
if (length(asevf) != 0){
final = m2[c(10,6,17,16,23,11,12,13,14,15,18,19,20,21,22,9)]
names(final) = c("SNP", "CHISQ", "SNP2", "GEN1", "GEN2",
"F_A1", "OR1", "P1", "TIPO1", "LOC1",
"F_A2", "P2", "OR2", "TIPO2", "LOC2", "TBf")
final2 = as.matrix(final)
final3 = as.data.frame(final2)
# To keep p.value
episuc100 = read_delim(paste0("",out,"/episelecrjoint.epi.cc.summary"),
delim = " ", col_types = "ncnnnnnc")
names(episuc100) = c("CHR", "SNP", "N_SIG", "N_TOT", "PROP", "BEST_CHISQ", "BEST_CHR", "BEST_SNP")
episet = episuc100
epirep = episet[c(2,8)]
epipvalue = read_delim(paste0("",out,"/episelecrjoint.epi.cc"),
delim = " ", col_types = "ncncnn")
names(epipvalue) = c("CHR1", "SNP1", "CHR2", "SNP2", "STAT", "P")
quiero = filter(epipvalue, epipvalue$SNP1 %in% epirep$SNP & epipvalue$SNP2 %in% epirep$BEST_SNP)
quiero = mutate(quiero, deseo = paste(SNP1,SNP2))
episet = mutate(episet, deseo = paste(SNP,BEST_SNP))
qf = filter(quiero, quiero$deseo %in% episet$deseo)
qf = qf[c(2,6)]
names(qf) = c("SNP", "Pepi")
m5 = inner_join(final3, qf, by ="SNP")
epiinform = m5[c(1,2,16,17,3:15)]
write.table(epiinform, file = paste0("",out,"/epiinform.txt"),
sep = " ", row.names = F, col.names = T, quote = F)
tx  = readLines(paste0("",out,"//epiinform.txt"))
tx  = gsub(pattern = "[[:space:]]", replace = " ", x = tx)
write.table(tx, file = paste0("",out,"/epiinform.txt"),
sep = " ", row.names = F, col.names = F, quote = F)
}else{
final = m2[c(10,6,17,16,22,11,12,13,15,18,19,20,21,9)]
names(final) = c("SNP", "CHISQ", "SNP2", "GEN1", "GEN2",
"F_A1", "OR1", "P1", "LOC1",
"F_A2", "P2", "OR2", "LOC2", "TBf")
final2 = as.matrix(final)
final3 = as.data.frame(final2)
# To keep p.value
episuc100 = read_delim(paste0("",out,"/episelecrjoint.epi.cc.summary"),
delim = " ", col_types = "ncnnnnnc")
names(episuc100) = c("CHR", "SNP", "N_SIG", "N_TOT", "PROP", "BEST_CHISQ", "BEST_CHR", "BEST_SNP")
episet = episuc100
epirep = episet[c(2,8)]
epipvalue = read_delim(paste0("",out,"/episelecrjoint.epi.cc"),
delim = " ", col_types = "ncncnn")
names(epipvalue) = c("CHR1", "SNP1", "CHR2", "SNP2", "STAT", "P")
quiero = filter(epipvalue, epipvalue$SNP1 %in% epirep$SNP & epipvalue$SNP2 %in% epirep$BEST_SNP)
quiero = mutate(quiero, deseo = paste(SNP1,SNP2))
episet = mutate(episet, deseo = paste(SNP,BEST_SNP))
qf = filter(quiero, quiero$deseo %in% episet$deseo)
qf = qf[c(2,6)]
names(qf) = c("SNP", "Pepi")
m5 = inner_join(final3, qf, by ="SNP")
epiinform = m5[c(1,2,14,15,3:13)]
write.table(epiinform, file = paste0("",out,"/epiinform.txt"),
sep = " ", row.names = F, col.names = T, quote = F)
tx  = readLines(paste0("",out,"//epiinform.txt"))
tx  = gsub(pattern = "[[:space:]]", replace = " ", x = tx)
write.table(tx, file = paste0("",out,"/epiinform.txt"),
sep = " ", row.names = F, col.names = F, quote = F)
}
}
} # Genelist y primary
}
remove.packages("epiasocgenes", lib="~/R/x86_64-pc-linux-gnu-library/3.6")
library(devtools)
library(roxygen2)
document()
install()
remove.packages("VARI3", lib="~/R/x86_64-pc-linux-gnu-library/3.6")
install_github(repo = "alexcis95/VARI3/VARI3", auth_token = "fa6b5f79db5f69da088637ac14dc90d6757e7e56", force = T)
twotood = function(l1,
l2,
bfile,
out = ".",
core = detectCores() -1,
plink = "plink")
{
# We execute twolocus command
system(paste0("",plink," --bfile ",bfile," --out ",out,"/",l1,"vs",l2," --twolocus ",l1," ",l2," --threads ",core,""))
# Ee split the document in two: cases and controls
system(paste0("awk '/Cases/,/Controls/ { print }' ",out,"/",l1,"vs",l2,".twolocus > ",out,"/cases"))
system(paste0("sed -i 's/[[:space:]]\\+/ /g' ",out,"/cases"))
system(paste0("awk '/Controls/,/All individuals/ { print }' ",out,"/",l1,"vs",l2,".twolocus > ",out,"/controls"))
system(paste0("sed -i 's/[[:space:]]\\+/ /g' ",out,"/controls"))
# To automate the reading
# Read the cases file
all_data = readLines(paste0("",out,"/cases"))
# In [4] we have the header
nombres = strsplit(all_data[12], " ")[[1]]
nombres = nombres[nombres != ""]
# In [5] we have the fist data line
datos1 = strsplit(all_data[13], " ")[[1]]
datos1 = datos1[datos1 != ""]
# In [6] we have the second data line
datos2 = strsplit(all_data[14], " ")[[1]]
datos2 = datos2[datos2 != ""]
# In [7] we have the third data line
datos3 = strsplit(all_data[15], " ")[[1]]
datos3 = datos3[datos3 != ""]
# In [8] we have the fourth data line
datos4 = strsplit(all_data[16], " ")[[1]]
datos4 = datos4[datos4 != ""]
# In [9] we have the fifth data line
datos5 = strsplit(all_data[17], " ")[[1]]
datos5 = datos5[datos5 != ""]
# Create the data frame of the two locus table (cases)
contingencia = data.frame(datos1[3],datos1[4],datos1[5],
datos1[6],datos1[7], stringsAsFactors = FALSE)
names(contingencia) = c(nombres[1],nombres[2],nombres[3],nombres[4],nombres[5])
contingencia = rbind(contingencia, c(datos2[2] , datos2[3] ,
datos2[4] , datos2[5] , datos2[6]))
contingencia = rbind(contingencia, c(datos3[2] , datos3[3] ,
datos3[4] , datos3[5] , datos3[6]))
contingencia = rbind(contingencia, c(datos4[2] , datos4[3] ,
datos4[4] , datos4[5] , datos4[6]))
contingencia = rbind(contingencia, c(datos5[2] , datos5[3] ,
datos5[4] , datos5[5] , datos5[6]))
row.names(contingencia) = c(datos1[2], datos2[1],datos3[1], datos4[1],datos5[1])
# Read the control file
all_data = readLines(paste0("",out,"/controls"))
# In [4] we have the header
nombres = strsplit(all_data[12], " ")[[1]]
nombres = nombres[nombres != ""]
# In [5] we have the fist data line
datos1 = strsplit(all_data[13], " ")[[1]]
datos1 = datos1[datos1 != ""]
# In [6] we have the second data line
datos2 = strsplit(all_data[14], " ")[[1]]
datos2 = datos2[datos2 != ""]
# In [7] we have the third data line
datos3 = strsplit(all_data[15], " ")[[1]]
datos3 = datos3[datos3 != ""]
# In [8] we have the fourth data line
datos4 = strsplit(all_data[16], " ")[[1]]
datos4 = datos4[datos4 != ""]
# In [9] we have the fifth data line
datos5 = strsplit(all_data[17], " ")[[1]]
datos5 = datos5[datos5 != ""]
# Create the data frame of the two locus table (controls)
contingenciact = data.frame(datos1[3],datos1[4],datos1[5],datos1[6],datos1[7], stringsAsFactors = FALSE)
names(contingenciact) = c(nombres[1],nombres[2],nombres[3],nombres[4],nombres[5])
contingenciact = rbind(contingenciact, c(datos2[2] , datos2[3] , datos2[4] , datos2[5] , datos2[6]))
contingenciact = rbind(contingenciact, c(datos3[2] , datos3[3] , datos3[4] , datos3[5] , datos3[6]))
contingenciact = rbind(contingenciact, c(datos4[2] , datos4[3] , datos4[4] , datos4[5] , datos4[6]))
contingenciact = rbind(contingenciact, c(datos5[2] , datos5[3] , datos5[4] , datos5[5] , datos5[6]))
row.names(contingenciact) = c(datos1[2], datos2[1],datos3[1], datos4[1],datos5[1])
#  Convert to matrix
tlcasos = data.matrix(contingencia)
tlcontroles = data.matrix(contingenciact)
# Calculation of the ratio between cases and controls
# when the ratio is greater than 1.0 it means that there is more frequency of the combination
# in cases and when it is lower it means that there is more frequency in the controls.
or = tlcasos/tlcontroles
write.table(or, file = paste0("",out,"/twotood",l1,"vs",l2,""), sep = " ",
row.names = T, col.names = T)
twood = read.table(paste0("",out,"/twotood",l1,"vs",l2,""), row.names = 1)
# Tp df
df = as.data.frame(or, row.names = T)
row = unlist(dimnames(or)[1])
row.names(df) = c(row[1], row[2], row[3], row[4], row[5])
# Remove not required rows and colums
dfp = df[-c(4), ]
dfp = dfp[,-4]
# To matrix
prueba = data.matrix(dfp)
# To long data
data_long = gather(dfp, condition, measurement, factor_key=TRUE)
data_long$nombres = rep(rownames(dfp),4)
names(data_long)[c(1,3)] = c("y", "x")
# We make the graph to facilitate the interpretation
pdf(paste0("",out,"/plot",l1,"vs",l2,""))
plot (ggplot(data_long, aes(fill=x, y=measurement, x=y)) +
geom_bar(position="dodge", stat="identity")+
geom_text(aes(label=round(measurement, 4), fontface="bold", vjust=1), position=position_dodge(width=0.9), size=3.5) +
geom_text(aes(y=0.3, label=x, fontface="bold"), color="white", position=position_dodge(width=0.9), angle=90, size=3) +
theme(plot.title = element_text(face="bold",hjust = 0.5),
legend.title=element_text(face="bold"), legend.position="bottom",
axis.title.x = element_text(face="bold"),
axis.text.y=element_blank(),
axis.title.y=element_text(face="bold"), axis.ticks.x=element_blank(), axis.ticks.y=element_blank(),
panel.background=element_blank(), panel.grid.minor=element_blank(), panel.grid.major=element_blank()) +
ggtitle(paste0("",l1,"vs",l2,"")) +
xlab(paste0("",l2,"")) + ylab("OR cases") + labs(fill = paste0("",l1,"")) + geom_hline(yintercept=1, linetype="dashed", color = "red"))
dev.off()
png(paste0("",out,"/plot",l1,"vs",l2,""))
plot (ggplot(data_long, aes(fill=x, y=measurement, x=y)) +
geom_bar(position="dodge", stat="identity")+
geom_text(aes(label=round(measurement, 4), fontface="bold", vjust=1), position=position_dodge(width=0.9), size=3.5) +
geom_text(aes(y=0.3, label=x, fontface="bold"), color="white", position=position_dodge(width=0.9), angle=90, size=3) +
theme(plot.title = element_text(face="bold",hjust = 0.5),
legend.title=element_text(face="bold"), legend.position="bottom",
axis.title.x = element_text(face="bold"),
axis.text.y=element_blank(),
axis.title.y=element_text(face="bold"), axis.ticks.x=element_blank(), axis.ticks.y=element_blank(),
panel.background=element_blank(), panel.grid.minor=element_blank(), panel.grid.major=element_blank()) +
ggtitle(paste0("",l1,"vs",l2,"")) +
xlab(paste0("",l2,"")) + ylab("OR cases") + labs(fill = paste0("",l1,"")) + geom_hline(yintercept=1, linetype="dashed", color = "red"))
dev.off()
return (or)
}
document()
install()
TOD = function(l1,
l2,
bfile,
out = ".",
core = detectCores() -1,
plink = "plink")
{
# We execute twolocus command
system(paste0("",plink," --bfile ",bfile," --out ",out,"/",l1,"vs",l2," --twolocus ",l1," ",l2," --threads ",core,""))
# Ee split the document in two: cases and controls
system(paste0("awk '/Cases/,/Controls/ { print }' ",out,"/",l1,"vs",l2,".twolocus > ",out,"/cases"))
system(paste0("sed -i 's/[[:space:]]\\+/ /g' ",out,"/cases"))
system(paste0("awk '/Controls/,/All individuals/ { print }' ",out,"/",l1,"vs",l2,".twolocus > ",out,"/controls"))
system(paste0("sed -i 's/[[:space:]]\\+/ /g' ",out,"/controls"))
# To automate the reading
# Read the cases file
all_data = readLines(paste0("",out,"/cases"))
# In [4] we have the header
nombres = strsplit(all_data[12], " ")[[1]]
nombres = nombres[nombres != ""]
# In [5] we have the fist data line
datos1 = strsplit(all_data[13], " ")[[1]]
datos1 = datos1[datos1 != ""]
# In [6] we have the second data line
datos2 = strsplit(all_data[14], " ")[[1]]
datos2 = datos2[datos2 != ""]
# In [7] we have the third data line
datos3 = strsplit(all_data[15], " ")[[1]]
datos3 = datos3[datos3 != ""]
# In [8] we have the fourth data line
datos4 = strsplit(all_data[16], " ")[[1]]
datos4 = datos4[datos4 != ""]
# In [9] we have the fifth data line
datos5 = strsplit(all_data[17], " ")[[1]]
datos5 = datos5[datos5 != ""]
# Create the data frame of the two locus table (cases)
contingencia = data.frame(datos1[3],datos1[4],datos1[5],
datos1[6],datos1[7], stringsAsFactors = FALSE)
names(contingencia) = c(nombres[1],nombres[2],nombres[3],nombres[4],nombres[5])
contingencia = rbind(contingencia, c(datos2[2] , datos2[3] ,
datos2[4] , datos2[5] , datos2[6]))
contingencia = rbind(contingencia, c(datos3[2] , datos3[3] ,
datos3[4] , datos3[5] , datos3[6]))
contingencia = rbind(contingencia, c(datos4[2] , datos4[3] ,
datos4[4] , datos4[5] , datos4[6]))
contingencia = rbind(contingencia, c(datos5[2] , datos5[3] ,
datos5[4] , datos5[5] , datos5[6]))
row.names(contingencia) = c(datos1[2], datos2[1],datos3[1], datos4[1],datos5[1])
# Read the control file
all_data = readLines(paste0("",out,"/controls"))
# In [4] we have the header
nombres = strsplit(all_data[12], " ")[[1]]
nombres = nombres[nombres != ""]
# In [5] we have the fist data line
datos1 = strsplit(all_data[13], " ")[[1]]
datos1 = datos1[datos1 != ""]
# In [6] we have the second data line
datos2 = strsplit(all_data[14], " ")[[1]]
datos2 = datos2[datos2 != ""]
# In [7] we have the third data line
datos3 = strsplit(all_data[15], " ")[[1]]
datos3 = datos3[datos3 != ""]
# In [8] we have the fourth data line
datos4 = strsplit(all_data[16], " ")[[1]]
datos4 = datos4[datos4 != ""]
# In [9] we have the fifth data line
datos5 = strsplit(all_data[17], " ")[[1]]
datos5 = datos5[datos5 != ""]
# Create the data frame of the two locus table (controls)
contingenciact = data.frame(datos1[3],datos1[4],datos1[5],datos1[6],datos1[7], stringsAsFactors = FALSE)
names(contingenciact) = c(nombres[1],nombres[2],nombres[3],nombres[4],nombres[5])
contingenciact = rbind(contingenciact, c(datos2[2] , datos2[3] , datos2[4] , datos2[5] , datos2[6]))
contingenciact = rbind(contingenciact, c(datos3[2] , datos3[3] , datos3[4] , datos3[5] , datos3[6]))
contingenciact = rbind(contingenciact, c(datos4[2] , datos4[3] , datos4[4] , datos4[5] , datos4[6]))
contingenciact = rbind(contingenciact, c(datos5[2] , datos5[3] , datos5[4] , datos5[5] , datos5[6]))
row.names(contingenciact) = c(datos1[2], datos2[1],datos3[1], datos4[1],datos5[1])
#  Convert to matrix
tlcasos = data.matrix(contingencia)
tlcontroles = data.matrix(contingenciact)
# Calculation of the ratio between cases and controls
# when the ratio is greater than 1.0 it means that there is more frequency of the combination
# in cases and when it is lower it means that there is more frequency in the controls.
or = tlcasos/tlcontroles
write.table(or, file = paste0("",out,"/twotood",l1,"vs",l2,""), sep = " ",
row.names = T, col.names = T)
twood = read.table(paste0("",out,"/twotood",l1,"vs",l2,""), row.names = 1)
# Tp df
df = as.data.frame(or, row.names = T)
row = unlist(dimnames(or)[1])
row.names(df) = c(row[1], row[2], row[3], row[4], row[5])
# Remove not required rows and colums
dfp = df[-c(4), ]
dfp = dfp[,-4]
# To matrix
prueba = data.matrix(dfp)
# To long data
data_long = gather(dfp, condition, measurement, factor_key=TRUE)
data_long$nombres = rep(rownames(dfp),4)
names(data_long)[c(1,3)] = c("y", "x")
# We make the graph to facilitate the interpretation
pdf(paste0("",out,"/plot",l1,"vs",l2,""))
plot (ggplot(data_long, aes(fill=x, y=measurement, x=y)) +
geom_bar(position="dodge", stat="identity")+
geom_text(aes(label=round(measurement, 4), fontface="bold", vjust=1), position=position_dodge(width=0.9), size=3.5) +
geom_text(aes(y=0.3, label=x, fontface="bold"), color="white", position=position_dodge(width=0.9), angle=90, size=3) +
theme(plot.title = element_text(face="bold",hjust = 0.5),
legend.title=element_text(face="bold"), legend.position="bottom",
axis.title.x = element_text(face="bold"),
axis.text.y=element_blank(),
axis.title.y=element_text(face="bold"), axis.ticks.x=element_blank(), axis.ticks.y=element_blank(),
panel.background=element_blank(), panel.grid.minor=element_blank(), panel.grid.major=element_blank()) +
ggtitle(paste0("",l1,"vs",l2,"")) +
xlab(paste0("",l2,"")) + ylab("OR cases") + labs(fill = paste0("",l1,"")) + geom_hline(yintercept=1, linetype="dashed", color = "red"))
dev.off()
png(paste0("",out,"/plot",l1,"vs",l2,""))
plot (ggplot(data_long, aes(fill=x, y=measurement, x=y)) +
geom_bar(position="dodge", stat="identity")+
geom_text(aes(label=round(measurement, 4), fontface="bold", vjust=1), position=position_dodge(width=0.9), size=3.5) +
geom_text(aes(y=0.3, label=x, fontface="bold"), color="white", position=position_dodge(width=0.9), angle=90, size=3) +
theme(plot.title = element_text(face="bold",hjust = 0.5),
legend.title=element_text(face="bold"), legend.position="bottom",
axis.title.x = element_text(face="bold"),
axis.text.y=element_blank(),
axis.title.y=element_text(face="bold"), axis.ticks.x=element_blank(), axis.ticks.y=element_blank(),
panel.background=element_blank(), panel.grid.minor=element_blank(), panel.grid.major=element_blank()) +
ggtitle(paste0("",l1,"vs",l2,"")) +
xlab(paste0("",l2,"")) + ylab("OR cases") + labs(fill = paste0("",l1,"")) + geom_hline(yintercept=1, linetype="dashed", color = "red"))
dev.off()
return (or)
}
document()
TLTO = function(l1,
l2,
bfile,
out = ".",
core = detectCores() -1,
plink = "plink")
{
# We execute twolocus command
system(paste0("",plink," --bfile ",bfile," --out ",out,"/",l1,"vs",l2," --twolocus ",l1," ",l2," --threads ",core,""))
# Ee split the document in two: cases and controls
system(paste0("awk '/Cases/,/Controls/ { print }' ",out,"/",l1,"vs",l2,".twolocus > ",out,"/cases"))
system(paste0("sed -i 's/[[:space:]]\\+/ /g' ",out,"/cases"))
system(paste0("awk '/Controls/,/All individuals/ { print }' ",out,"/",l1,"vs",l2,".twolocus > ",out,"/controls"))
system(paste0("sed -i 's/[[:space:]]\\+/ /g' ",out,"/controls"))
# To automate the reading
# Read the cases file
all_data = readLines(paste0("",out,"/cases"))
# In [4] we have the header
nombres = strsplit(all_data[12], " ")[[1]]
nombres = nombres[nombres != ""]
# In [5] we have the fist data line
datos1 = strsplit(all_data[13], " ")[[1]]
datos1 = datos1[datos1 != ""]
# In [6] we have the second data line
datos2 = strsplit(all_data[14], " ")[[1]]
datos2 = datos2[datos2 != ""]
# In [7] we have the third data line
datos3 = strsplit(all_data[15], " ")[[1]]
datos3 = datos3[datos3 != ""]
# In [8] we have the fourth data line
datos4 = strsplit(all_data[16], " ")[[1]]
datos4 = datos4[datos4 != ""]
# In [9] we have the fifth data line
datos5 = strsplit(all_data[17], " ")[[1]]
datos5 = datos5[datos5 != ""]
# Create the data frame of the two locus table (cases)
contingencia = data.frame(datos1[3],datos1[4],datos1[5],
datos1[6],datos1[7], stringsAsFactors = FALSE)
names(contingencia) = c(nombres[1],nombres[2],nombres[3],nombres[4],nombres[5])
contingencia = rbind(contingencia, c(datos2[2] , datos2[3] ,
datos2[4] , datos2[5] , datos2[6]))
contingencia = rbind(contingencia, c(datos3[2] , datos3[3] ,
datos3[4] , datos3[5] , datos3[6]))
contingencia = rbind(contingencia, c(datos4[2] , datos4[3] ,
datos4[4] , datos4[5] , datos4[6]))
contingencia = rbind(contingencia, c(datos5[2] , datos5[3] ,
datos5[4] , datos5[5] , datos5[6]))
row.names(contingencia) = c(datos1[2], datos2[1],datos3[1], datos4[1],datos5[1])
# Read the control file
all_data = readLines(paste0("",out,"/controls"))
# In [4] we have the header
nombres = strsplit(all_data[12], " ")[[1]]
nombres = nombres[nombres != ""]
# In [5] we have the fist data line
datos1 = strsplit(all_data[13], " ")[[1]]
datos1 = datos1[datos1 != ""]
# In [6] we have the second data line
datos2 = strsplit(all_data[14], " ")[[1]]
datos2 = datos2[datos2 != ""]
# In [7] we have the third data line
datos3 = strsplit(all_data[15], " ")[[1]]
datos3 = datos3[datos3 != ""]
# In [8] we have the fourth data line
datos4 = strsplit(all_data[16], " ")[[1]]
datos4 = datos4[datos4 != ""]
# In [9] we have the fifth data line
datos5 = strsplit(all_data[17], " ")[[1]]
datos5 = datos5[datos5 != ""]
# Create the data frame of the two locus table (controls)
contingenciact = data.frame(datos1[3],datos1[4],datos1[5],datos1[6],datos1[7], stringsAsFactors = FALSE)
names(contingenciact) = c(nombres[1],nombres[2],nombres[3],nombres[4],nombres[5])
contingenciact = rbind(contingenciact, c(datos2[2] , datos2[3] , datos2[4] , datos2[5] , datos2[6]))
contingenciact = rbind(contingenciact, c(datos3[2] , datos3[3] , datos3[4] , datos3[5] , datos3[6]))
contingenciact = rbind(contingenciact, c(datos4[2] , datos4[3] , datos4[4] , datos4[5] , datos4[6]))
contingenciact = rbind(contingenciact, c(datos5[2] , datos5[3] , datos5[4] , datos5[5] , datos5[6]))
row.names(contingenciact) = c(datos1[2], datos2[1],datos3[1], datos4[1],datos5[1])
#  Convert to matrix
tlcasos = data.matrix(contingencia)
tlcontroles = data.matrix(contingenciact)
# Calculation of the ratio between cases and controls
# when the ratio is greater than 1.0 it means that there is more frequency of the combination
# in cases and when it is lower it means that there is more frequency in the controls.
or = tlcasos/tlcontroles
write.table(or, file = paste0("",out,"/twotood",l1,"vs",l2,""), sep = " ",
row.names = T, col.names = T)
twood = read.table(paste0("",out,"/twotood",l1,"vs",l2,""), row.names = 1)
# Tp df
df = as.data.frame(or, row.names = T)
row = unlist(dimnames(or)[1])
row.names(df) = c(row[1], row[2], row[3], row[4], row[5])
# Remove not required rows and colums
dfp = df[-c(4), ]
dfp = dfp[,-4]
# To matrix
prueba = data.matrix(dfp)
# To long data
data_long = gather(dfp, condition, measurement, factor_key=TRUE)
data_long$nombres = rep(rownames(dfp),4)
names(data_long)[c(1,3)] = c("y", "x")
# We make the graph to facilitate the interpretation
pdf(paste0("",out,"/plot",l1,"vs",l2,""))
plot (ggplot(data_long, aes(fill=x, y=measurement, x=y)) +
geom_bar(position="dodge", stat="identity")+
geom_text(aes(label=round(measurement, 4), fontface="bold", vjust=1), position=position_dodge(width=0.9), size=3.5) +
geom_text(aes(y=0.3, label=x, fontface="bold"), color="white", position=position_dodge(width=0.9), angle=90, size=3) +
theme(plot.title = element_text(face="bold",hjust = 0.5),
legend.title=element_text(face="bold"), legend.position="bottom",
axis.title.x = element_text(face="bold"),
axis.text.y=element_blank(),
axis.title.y=element_text(face="bold"), axis.ticks.x=element_blank(), axis.ticks.y=element_blank(),
panel.background=element_blank(), panel.grid.minor=element_blank(), panel.grid.major=element_blank()) +
ggtitle(paste0("",l1,"vs",l2,"")) +
xlab(paste0("",l2,"")) + ylab("OR cases") + labs(fill = paste0("",l1,"")) + geom_hline(yintercept=1, linetype="dashed", color = "red"))
dev.off()
png(paste0("",out,"/plot",l1,"vs",l2,""))
plot (ggplot(data_long, aes(fill=x, y=measurement, x=y)) +
geom_bar(position="dodge", stat="identity")+
geom_text(aes(label=round(measurement, 4), fontface="bold", vjust=1), position=position_dodge(width=0.9), size=3.5) +
geom_text(aes(y=0.3, label=x, fontface="bold"), color="white", position=position_dodge(width=0.9), angle=90, size=3) +
theme(plot.title = element_text(face="bold",hjust = 0.5),
legend.title=element_text(face="bold"), legend.position="bottom",
axis.title.x = element_text(face="bold"),
axis.text.y=element_blank(),
axis.title.y=element_text(face="bold"), axis.ticks.x=element_blank(), axis.ticks.y=element_blank(),
panel.background=element_blank(), panel.grid.minor=element_blank(), panel.grid.major=element_blank()) +
ggtitle(paste0("",l1,"vs",l2,"")) +
xlab(paste0("",l2,"")) + ylab("OR cases") + labs(fill = paste0("",l1,"")) + geom_hline(yintercept=1, linetype="dashed", color = "red"))
dev.off()
return (or)
}
document()
install()
